@using Microsoft.AspNetCore.Components.Authorization
@using Roulette.Context
@using Roulette.Models
@inject AppDbContext AppDbContext
@inject AuthenticationStateProvider AuthenticationStateProvider  
@inject IJSRuntime JsRuntime
<div id="modal-account" class="modal modal-fixed-footer" style="z-index: 1003; display: none; opacity: 0; transform: scaleX(0.7); top: 0px;height:480px;">
    <div class="modal-content">
        <h4>Account</h4>
        <div class="card-panel materialize-red error" style="display: none;">
            <span></span>
        </div>
        <div class="row">
            <div class="row">
                <div class="input-field col s12">
                    <input id="account-tradeofferurl" @bind="@tradeLink" name="tradeOfferUrl" type="url" class="validate" placeholder="https://steamcommunity.com/tradeoffer/new/?partner=XXXXXXXX&amp;token=XXXXXXXX">
                    <label for="account-tradeofferurl" class="active">
                        <a href="http://steamcommunity.com/my/tradeoffers/privacy#create_new_url_btn" target="_blank" class="secondary-text lighten">Trade Offer URL (click here for yours)</a>
                    </label>
                </div>
                <div class="input-field col s2">


                    <button class="btn secondary waves-effect" id="saveSettings" @onclick="async () => await SaveSettings()">Save</button>

                </div>
            </div>
        </div>
        <div class="row">
            <div class="col s12 m6">
                <div class="card secondary center-align">
                    <div class="card-content">
                        <span class="card-title">$@User.TotalDeposited</span>
                        <p>Total Deposited</p>
                    </div>
                </div>
            </div>
            <div class="col s12 m6">
                <div class="card green center-align">
                    <div class="card-content">
                        <span class="card-title">$@User.TotalWon</span>
                        <p>Total Won</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <a href="#" class="modal-action modal-close waves-effect waves-red btn-flat">Close</a>
    </div>
</div>

@code{
    SteamUsersModel User;
    string tradeLink;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        var claims = AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Claims;
        var steamId = claims.Where(c => c.Type == "steamID").Select(c => c.Value).SingleOrDefault();
        if (steamId != null)
        {
            User = AppDbContext.SteamUsers.Find(steamId);
        }
        tradeLink = User.TradeLink?? string.Empty ;
    }

    protected override async void OnAfterRender(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            await JsRuntime.InvokeVoidAsync("AddModal");
          
            StateHasChanged();
        }
    }
    async Task SaveSettings()
    {
        User.TradeLink = tradeLink;
        AppDbContext.SteamUsers.Update(User);
        await AppDbContext.SaveChangesAsync();
    }



}